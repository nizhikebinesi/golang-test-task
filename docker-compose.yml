version: '3.2'

volumes:
  db-data:
  tmp-data:
  redis-data:

services:
  app:
    build:
      dockerfile: cmd/crud/Dockerfile
      context: ./
    restart: on-failure
    env_file:
      - cmd/crud/.env
    depends_on:
      - consul
      - postgres
      - memcached_1
      - memcached_2
      - memcached_3
      - memcached_4
      - redis
    networks:
      - big_net

  memcached_1:
    image: memcached:1.6.17-alpine
    restart: on-failure
    ports:
      - "11211:11211"
    networks:
      - big_net

  memcached_2:
    image: memcached:1.6.17-alpine
    restart: on-failure
    ports:
      - "11212:11211"
    networks:
      - big_net

  memcached_3:
    image: memcached:1.6.17-alpine
    restart: on-failure
    ports:
      - "11213:11211"
    networks:
      - big_net

  memcached_4:
    image: memcached:1.6.17-alpine
    restart: on-failure
    ports:
      - "11214:11211"
    networks:
      - big_net

  redis:
    image: redis:6.0.5-alpine
    restart: on-failure
    volumes:
      - redis-data:/data:cached
    ports:
      - '6379:6379/tcp'
    networks:
      - big_net

  postgres:
    image: postgres:14.4
    restart: on-failure
    environment:
      - POSTGRES_USER=gorm
      - POSTGRES_PASSWORD=gorm
      - POSTGRES_DB=gorm
    volumes:
      - ./dump:/docker-entrypoint-initdb.d/
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - big_net

  nginx:
    build:
      dockerfile: nginx/Dockerfile
      context: ./
    ports:
      - "8080:80"
    networks:
      - big_net
    depends_on:
      - app
    restart: on-failure

  consul:
    image: consul:latest
    restart: on-failure
    ports:
      - "8500:8500"
    networks:
      - big_net

networks:
  big_net:
    driver: bridge